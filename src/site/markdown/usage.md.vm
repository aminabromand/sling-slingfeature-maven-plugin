#set($h1 = '#')
#set($h2 = '##')
#set($h3 = '###')
#set($h4 = '####')
#set($sp = '${')
#set($sp2 = '${{')
#set($sp3 = '${{{')
#set($ep = '}')

$h2 Usage

$h3 Single Feature Model Project

A single Feature Model project cannot have a **classiier** otherwise it will fail to create the **slingosgifeature**
file.

This is an example Plugin configuration:
```
<plugin>
    <groupId>org.apache.sling</groupId>
    <artifactId>slingfeature-maven-plugin</artifactId>
    <version>${sp}slingfeature-maven-plugin.version${ep}</version>
    <extensions>true</extensions>
    <configuration>
        <features>target/fm</features>
        <!--
            This project's FM is generated by the Content Package Converter and so the next line is here to inform
            the plugin that the FM might not be there at the start of the build
        -->
        <generatedFeatures>${sp}basedir${ep}/target/fm</generatedFeatures>
    </configuration>
    <executions>
        <execution>
            <id>aggregate-aem-features</id>
            <phase>generate-test-sources</phase>
            <goals>
                <goal>aggregate-features</goal>
            </goals>
            <configuration>
                <aggregates>
                    <aggregate>
                        <!--
                            A classifier must not be provided in a single FM project build as the installation will fail,
                            so next line must be deleted
                        -->
                        <classifier>test</classifier>
                        <description>Single Feature Project</description>
                        <filesInclude>**/*.json</filesInclude>
                    </aggregate>
                </aggregates>
            </configuration>
        </execution>
        <execution>
            <id>attach-base-feature</id>
            <phase>process-test-sources</phase>
            <goals>
                <goal>attach-features</goal>
            </goals>
        </execution>
    </executions>
</plugin>
```
The FM aggregation is done and the appropriate project FM is created but that FM is not installed due to the classifier
and so the build fails during the installation phase.

Remove the **<classifier/>** node and the build will run through smoothly.
